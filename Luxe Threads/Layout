import React, { useState, useEffect, useCallback } from react;
import { Link, useLocation } from react-router-dom;
import { createPageUrl } from @utils;
import { ShoppingBag, Search, User, Menu, X, Heart, LogOut, Settings } from lucide-react;
import { Button } from @componentsuibutton;
import { Badge } from @componentsuibadge;
import { CartItem } from @entitiesCartItem;
import { User as UserEntity } from @entitiesUser;
import {
  Sheet,
  SheetContent,
  SheetTrigger,
} from @componentsuisheet;
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
  DropdownMenuSeparator,
} from @componentsuidropdown-menu;
import {
  Avatar,
  AvatarFallback,
  AvatarImage,
} from @componentsuiavatar;

export default function Layout({ children, currentPageName }) {
  const location = useLocation();
  const [cartCount, setCartCount] = useState(0);
  const [user, setUser] = useState(null);
  const [isMenuOpen, setIsMenuOpen] = useState(false);

  const loadUser = useCallback(async () = {
    try {
      const currentUser = await UserEntity.me();
      setUser(currentUser);
    } catch (error) {
       User not logged in
    }
  }, []);

  const loadCartCount = useCallback(async () = {
    if (user.email) {
      try {
        const cartItems = await CartItem.filter({ user_email user.email });
        const totalCount = cartItems.reduce((sum, item) = sum + item.quantity, 0);
        setCartCount(totalCount);
      } catch (error) {
        console.error(Error loading cart count, error);
      }
    } else {
      const anonymousCart = JSON.parse(localStorage.getItem('anonymousCart')  '[]');
      const totalCount = anonymousCart.reduce((sum, item) = sum + item.quantity, 0);
      setCartCount(totalCount);
    }
  }, [user.email]);

  useEffect(() = {
    loadUser();
  }, [loadUser]);

  useEffect(() = {
    loadCartCount();
  }, [user, loadCartCount]);

  useEffect(() = {
    const handleCartUpdate = () = {
      loadCartCount();
    };

    window.addEventListener('cartUpdated', handleCartUpdate);

    return () = {
      window.removeEventListener('cartUpdated', handleCartUpdate);
    };
  }, [loadCartCount]);

  const handleLogout = async () = {
    try {
      await UserEntity.logout();
      setUser(null);
       Clear local cart on logout
      localStorage.removeItem('anonymousCart');
      window.dispatchEvent(new CustomEvent('cartUpdated'));
    } catch (error) {
      console.error(Logout error, error);
    }
  };

  const getInitials = (name) = {
    return name.split(' ').map(n = n[0]).join('').toUpperCase()  'U';
  };

  const navigationItems = [
    { name Shop, path createPageUrl(Shop) },
    { name Categories, path # },
    { name New Arrivals, path # },
    { name Sale, path # }
  ];

  return (
    div className=min-h-screen bg-gray-50
      style
        {`
          root {
            --primary-dark #1a1a1a;
            --primary-gold #d4af37;
            --warm-white #fafafa;
            --soft-gray #f8f9fa;
          }
          
          .luxury-gradient {
            background linear-gradient(135deg, #1a1a1a 0%, #2d2d2d 100%);
          }
          
          .gold-gradient {
            background linear-gradient(135deg, #d4af37 0%, #b8941f 100%);
          }
          
          .premium-shadow {
            box-shadow 0 4px 20px rgba(0, 0, 0, 0.08);
          }
          
          .premium-card {
            box-shadow 0 2px 12px rgba(0, 0, 0, 0.06);
            transition all 0.3s ease;
          }
          
          .premium-cardhover {
            box-shadow 0 8px 25px rgba(0, 0, 0, 0.12);
            transform translateY(-2px);
          }
        `}
      style

      { Header }
      header className=luxury-gradient text-white sticky top-0 z-50 premium-shadow
        div className=max-w-7xl mx-auto px-4 smpx-6 lgpx-8
          div className=flex justify-between items-center h-16
            { Logo }
            Link to={createPageUrl(Shop)} className=flex items-center space-x-2
              div className=w-8 h-8 gold-gradient rounded-full flex items-center justify-center
                ShoppingBag className=w-5 h-5 text-white 
              div
              span className=text-xl font-bold tracking-tightLUXEspan
            Link

            { Desktop Navigation }
            nav className=hidden mdflex space-x-8
              {navigationItems.map((item) = (
                Link
                  key={item.name}
                  to={item.path}
                  className=text-sm font-medium hovertext-yellow-300 transition-colors duration-200
                
                  {item.name}
                Link
              ))}
            nav

            { Right Actions }
            div className=flex items-center space-x-4
              Button variant=ghost size=icon className=text-white hoverbg-white10
                Search className=w-5 h-5 
              Button
              
              Button variant=ghost size=icon className=text-white hoverbg-white10
                Heart className=w-5 h-5 
              Button

              Link to={createPageUrl(Cart)}
                Button variant=ghost size=icon className=text-white hoverbg-white10 relative
                  ShoppingBag className=w-5 h-5 
                  {cartCount  0 && (
                    Badge className=absolute -top-2 -right-2 h-5 w-5 flex items-center justify-center text-xs gold-gradient text-white border-0
                      {cartCount}
                    Badge
                  )}
                Button
              Link

              {user  (
                DropdownMenu
                  DropdownMenuTrigger asChild
                    Button variant=ghost className=flex items-center space-x-2 hoverbg-white10
                      Avatar className=h-8 w-8
                        AvatarImage src={user.avatar_url} 
                        AvatarFallback className=bg-white20 text-white
                          {getInitials(user.full_name)}
                        AvatarFallback
                      Avatar
                      span className=text-sm hidden smblock{user.full_name}span
                    Button
                  DropdownMenuTrigger
                  DropdownMenuContent className=w-56 align=end
                    div className=px-2 py-1.5 text-sm font-medium
                      {user.full_name}
                    div
                    div className=px-2 py-1.5 text-xs text-gray-500
                      {user.email}
                    div
                    DropdownMenuSeparator 
                    DropdownMenuItem asChild
                      Link to={createPageUrl(Profile)} className=flex items-center
                        Settings className=w-4 h-4 mr-2 
                        Edit Profile
                      Link
                    DropdownMenuItem
                    DropdownMenuSeparator 
                    DropdownMenuItem 
                      onClick={handleLogout}
                      className=text-red-600 focustext-red-600
                    
                      LogOut className=w-4 h-4 mr-2 
                      Sign Out
                    DropdownMenuItem
                  DropdownMenuContent
                DropdownMenu
              )  (
                Button 
                  onClick={() = UserEntity.login()}
                  variant=outline 
                  size=sm
                  className=border-white20 text-white hoverbg-white hovertext-gray-900
                
                  Sign In
                Button
              )}

              { Mobile Menu }
              Sheet open={isMenuOpen} onOpenChange={setIsMenuOpen}
                SheetTrigger asChild
                  Button variant=ghost size=icon className=mdhidden text-white
                    Menu className=w-5 h-5 
                  Button
                SheetTrigger
                SheetContent side=right className=w-[300px] luxury-gradient text-white
                  nav className=flex flex-col space-y-6 mt-8
                    {navigationItems.map((item) = (
                      Link
                        key={item.name}
                        to={item.path}
                        className=text-lg font-medium hovertext-yellow-300 transition-colors
                        onClick={() = setIsMenuOpen(false)}
                      
                        {item.name}
                      Link
                    ))}
                    {user && (
                      
                        div className=border-t border-white20 pt-6
                          Link
                            to={createPageUrl(Profile)}
                            className=text-lg font-medium hovertext-yellow-300 transition-colors block
                            onClick={() = setIsMenuOpen(false)}
                          
                            Edit Profile
                          Link
                        div
                        button
                          onClick={() = {
                            handleLogout();
                            setIsMenuOpen(false);
                          }}
                          className=text-lg font-medium hovertext-yellow-300 transition-colors text-left
                        
                          Sign Out
                        button
                      
                    )}
                  nav
                SheetContent
              Sheet
            div
          div
        div
      header

      { Main Content }
      main className=flex-1
        {children}
      main

      { Footer }
      footer className=luxury-gradient text-white py-12 mt-16
        div className=max-w-7xl mx-auto px-4 smpx-6 lgpx-8
          div className=grid grid-cols-1 mdgrid-cols-4 gap-8
            div
              div className=flex items-center space-x-2 mb-4
                div className=w-8 h-8 gold-gradient rounded-full flex items-center justify-center
                  ShoppingBag className=w-5 h-5 text-white 
                div
                span className=text-xl font-boldLUXEspan
              div
              p className=text-gray-300 text-sm
                Premium e-commerce experience with curated luxury items.
              p
            div
            
            div
              h3 className=font-semibold mb-4Shoph3
              ul className=space-y-2 text-sm text-gray-300
                liNew Arrivalsli
                liBest Sellersli
                liSaleli
                liGift Cardsli
              ul
            div
            
            div
              h3 className=font-semibold mb-4Supporth3
              ul className=space-y-2 text-sm text-gray-300
                liContact Usli
                liSize Guideli
                liShippingli
                liReturnsli
              ul
            div
            
            div
              h3 className=font-semibold mb-4Companyh3
              ul className=space-y-2 text-sm text-gray-300
                liAboutli
                liCareersli
                liPressli
                liSustainabilityli
              ul
            div
          div
          
          div className=border-t border-gray-700 mt-8 pt-8 text-center text-sm text-gray-400
            © 2024 LUXE. All rights reserved.
          div
        div
      footer
    div
  );
}